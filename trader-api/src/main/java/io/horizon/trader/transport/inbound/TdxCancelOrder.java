/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.horizon.trader.transport.inbound;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;
import java.util.Optional;
/** 撤单 */
@org.apache.avro.specific.AvroGenerated
public class TdxCancelOrder extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2991829051675086910L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TdxCancelOrder\",\"namespace\":\"io.horizon.trader.transport.inbound\",\"doc\":\"撤单\",\"fields\":[{\"name\":\"generateTime\",\"type\":\"long\"},{\"name\":\"sendTime\",\"type\":\"long\"},{\"name\":\"ordSysId\",\"type\":\"long\"},{\"name\":\"immediately\",\"type\":\"boolean\",\"default\":true},{\"name\":\"delayMillis\",\"type\":\"long\",\"default\":0},{\"name\":\"exchangeCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"instrumentCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"brokerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"accountId\",\"type\":\"int\"},{\"name\":\"subAccountId\",\"type\":\"int\"},{\"name\":\"strategyId\",\"type\":\"int\"},{\"name\":\"operatorId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"msg\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TdxCancelOrder> ENCODER =
      new BinaryMessageEncoder<TdxCancelOrder>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TdxCancelOrder> DECODER =
      new BinaryMessageDecoder<TdxCancelOrder>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TdxCancelOrder> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TdxCancelOrder> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TdxCancelOrder> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TdxCancelOrder>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TdxCancelOrder to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TdxCancelOrder from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TdxCancelOrder instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TdxCancelOrder fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long generateTime;
  private long sendTime;
  private long ordSysId;
  private boolean immediately;
  private long delayMillis;
  private java.lang.String exchangeCode;
  private java.lang.String instrumentCode;
  private java.lang.String brokerId;
  private int accountId;
  private int subAccountId;
  private int strategyId;
  private java.lang.String operatorId;
  private java.lang.String msg;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TdxCancelOrder() {}

  /**
   * All-args constructor.
   * @param generateTime The new value for generateTime
   * @param sendTime The new value for sendTime
   * @param ordSysId The new value for ordSysId
   * @param immediately The new value for immediately
   * @param delayMillis The new value for delayMillis
   * @param exchangeCode The new value for exchangeCode
   * @param instrumentCode The new value for instrumentCode
   * @param brokerId The new value for brokerId
   * @param accountId The new value for accountId
   * @param subAccountId The new value for subAccountId
   * @param strategyId The new value for strategyId
   * @param operatorId The new value for operatorId
   * @param msg The new value for msg
   */
  public TdxCancelOrder(java.lang.Long generateTime, java.lang.Long sendTime, java.lang.Long ordSysId, java.lang.Boolean immediately, java.lang.Long delayMillis, java.lang.String exchangeCode, java.lang.String instrumentCode, java.lang.String brokerId, java.lang.Integer accountId, java.lang.Integer subAccountId, java.lang.Integer strategyId, java.lang.String operatorId, java.lang.String msg) {
    this.generateTime = generateTime;
    this.sendTime = sendTime;
    this.ordSysId = ordSysId;
    this.immediately = immediately;
    this.delayMillis = delayMillis;
    this.exchangeCode = exchangeCode;
    this.instrumentCode = instrumentCode;
    this.brokerId = brokerId;
    this.accountId = accountId;
    this.subAccountId = subAccountId;
    this.strategyId = strategyId;
    this.operatorId = operatorId;
    this.msg = msg;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return generateTime;
    case 1: return sendTime;
    case 2: return ordSysId;
    case 3: return immediately;
    case 4: return delayMillis;
    case 5: return exchangeCode;
    case 6: return instrumentCode;
    case 7: return brokerId;
    case 8: return accountId;
    case 9: return subAccountId;
    case 10: return strategyId;
    case 11: return operatorId;
    case 12: return msg;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: generateTime = (java.lang.Long)value$; break;
    case 1: sendTime = (java.lang.Long)value$; break;
    case 2: ordSysId = (java.lang.Long)value$; break;
    case 3: immediately = (java.lang.Boolean)value$; break;
    case 4: delayMillis = (java.lang.Long)value$; break;
    case 5: exchangeCode = value$ != null ? value$.toString() : null; break;
    case 6: instrumentCode = value$ != null ? value$.toString() : null; break;
    case 7: brokerId = value$ != null ? value$.toString() : null; break;
    case 8: accountId = (java.lang.Integer)value$; break;
    case 9: subAccountId = (java.lang.Integer)value$; break;
    case 10: strategyId = (java.lang.Integer)value$; break;
    case 11: operatorId = value$ != null ? value$.toString() : null; break;
    case 12: msg = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'generateTime' field.
   * @return The value of the 'generateTime' field.
   */
  public long getGenerateTime() {
    return generateTime;
  }

  /**
   * Gets the value of the 'generateTime' field as an Optional&lt;java.lang.Long&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.Long&gt;.
   */
  public Optional<java.lang.Long> getOptionalGenerateTime() {
    return Optional.<java.lang.Long>ofNullable(generateTime);
  }

  /**
   * Sets the value of the 'generateTime' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setGenerateTime(long value) {
    this.generateTime = value;
    return this;
  }

  /**
   * Gets the value of the 'sendTime' field.
   * @return The value of the 'sendTime' field.
   */
  public long getSendTime() {
    return sendTime;
  }

  /**
   * Gets the value of the 'sendTime' field as an Optional&lt;java.lang.Long&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.Long&gt;.
   */
  public Optional<java.lang.Long> getOptionalSendTime() {
    return Optional.<java.lang.Long>ofNullable(sendTime);
  }

  /**
   * Sets the value of the 'sendTime' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setSendTime(long value) {
    this.sendTime = value;
    return this;
  }

  /**
   * Gets the value of the 'ordSysId' field.
   * @return The value of the 'ordSysId' field.
   */
  public long getOrdSysId() {
    return ordSysId;
  }

  /**
   * Gets the value of the 'ordSysId' field as an Optional&lt;java.lang.Long&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.Long&gt;.
   */
  public Optional<java.lang.Long> getOptionalOrdSysId() {
    return Optional.<java.lang.Long>ofNullable(ordSysId);
  }

  /**
   * Sets the value of the 'ordSysId' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setOrdSysId(long value) {
    this.ordSysId = value;
    return this;
  }

  /**
   * Gets the value of the 'immediately' field.
   * @return The value of the 'immediately' field.
   */
  public boolean getImmediately() {
    return immediately;
  }

  /**
   * Gets the value of the 'immediately' field as an Optional&lt;java.lang.Boolean&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.Boolean&gt;.
   */
  public Optional<java.lang.Boolean> getOptionalImmediately() {
    return Optional.<java.lang.Boolean>ofNullable(immediately);
  }

  /**
   * Sets the value of the 'immediately' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setImmediately(boolean value) {
    this.immediately = value;
    return this;
  }

  /**
   * Gets the value of the 'delayMillis' field.
   * @return The value of the 'delayMillis' field.
   */
  public long getDelayMillis() {
    return delayMillis;
  }

  /**
   * Gets the value of the 'delayMillis' field as an Optional&lt;java.lang.Long&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.Long&gt;.
   */
  public Optional<java.lang.Long> getOptionalDelayMillis() {
    return Optional.<java.lang.Long>ofNullable(delayMillis);
  }

  /**
   * Sets the value of the 'delayMillis' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setDelayMillis(long value) {
    this.delayMillis = value;
    return this;
  }

  /**
   * Gets the value of the 'exchangeCode' field.
   * @return The value of the 'exchangeCode' field.
   */
  public java.lang.String getExchangeCode() {
    return exchangeCode;
  }

  /**
   * Gets the value of the 'exchangeCode' field as an Optional&lt;java.lang.String&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.String&gt;.
   */
  public Optional<java.lang.String> getOptionalExchangeCode() {
    return Optional.<java.lang.String>ofNullable(exchangeCode);
  }

  /**
   * Sets the value of the 'exchangeCode' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setExchangeCode(java.lang.String value) {
    this.exchangeCode = value;
    return this;
  }

  /**
   * Gets the value of the 'instrumentCode' field.
   * @return The value of the 'instrumentCode' field.
   */
  public java.lang.String getInstrumentCode() {
    return instrumentCode;
  }

  /**
   * Gets the value of the 'instrumentCode' field as an Optional&lt;java.lang.String&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.String&gt;.
   */
  public Optional<java.lang.String> getOptionalInstrumentCode() {
    return Optional.<java.lang.String>ofNullable(instrumentCode);
  }

  /**
   * Sets the value of the 'instrumentCode' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setInstrumentCode(java.lang.String value) {
    this.instrumentCode = value;
    return this;
  }

  /**
   * Gets the value of the 'brokerId' field.
   * @return The value of the 'brokerId' field.
   */
  public java.lang.String getBrokerId() {
    return brokerId;
  }

  /**
   * Gets the value of the 'brokerId' field as an Optional&lt;java.lang.String&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.String&gt;.
   */
  public Optional<java.lang.String> getOptionalBrokerId() {
    return Optional.<java.lang.String>ofNullable(brokerId);
  }

  /**
   * Sets the value of the 'brokerId' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setBrokerId(java.lang.String value) {
    this.brokerId = value;
    return this;
  }

  /**
   * Gets the value of the 'accountId' field.
   * @return The value of the 'accountId' field.
   */
  public int getAccountId() {
    return accountId;
  }

  /**
   * Gets the value of the 'accountId' field as an Optional&lt;java.lang.Integer&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.Integer&gt;.
   */
  public Optional<java.lang.Integer> getOptionalAccountId() {
    return Optional.<java.lang.Integer>ofNullable(accountId);
  }

  /**
   * Sets the value of the 'accountId' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setAccountId(int value) {
    this.accountId = value;
    return this;
  }

  /**
   * Gets the value of the 'subAccountId' field.
   * @return The value of the 'subAccountId' field.
   */
  public int getSubAccountId() {
    return subAccountId;
  }

  /**
   * Gets the value of the 'subAccountId' field as an Optional&lt;java.lang.Integer&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.Integer&gt;.
   */
  public Optional<java.lang.Integer> getOptionalSubAccountId() {
    return Optional.<java.lang.Integer>ofNullable(subAccountId);
  }

  /**
   * Sets the value of the 'subAccountId' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setSubAccountId(int value) {
    this.subAccountId = value;
    return this;
  }

  /**
   * Gets the value of the 'strategyId' field.
   * @return The value of the 'strategyId' field.
   */
  public int getStrategyId() {
    return strategyId;
  }

  /**
   * Gets the value of the 'strategyId' field as an Optional&lt;java.lang.Integer&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.Integer&gt;.
   */
  public Optional<java.lang.Integer> getOptionalStrategyId() {
    return Optional.<java.lang.Integer>ofNullable(strategyId);
  }

  /**
   * Sets the value of the 'strategyId' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setStrategyId(int value) {
    this.strategyId = value;
    return this;
  }

  /**
   * Gets the value of the 'operatorId' field.
   * @return The value of the 'operatorId' field.
   */
  public java.lang.String getOperatorId() {
    return operatorId;
  }

  /**
   * Gets the value of the 'operatorId' field as an Optional&lt;java.lang.String&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.String&gt;.
   */
  public Optional<java.lang.String> getOptionalOperatorId() {
    return Optional.<java.lang.String>ofNullable(operatorId);
  }

  /**
   * Sets the value of the 'operatorId' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setOperatorId(java.lang.String value) {
    this.operatorId = value;
    return this;
  }

  /**
   * Gets the value of the 'msg' field.
   * @return The value of the 'msg' field.
   */
  public java.lang.String getMsg() {
    return msg;
  }

  /**
   * Gets the value of the 'msg' field as an Optional&lt;java.lang.String&gt;.
   * @return The value wrapped in an Optional&lt;java.lang.String&gt;.
   */
  public Optional<java.lang.String> getOptionalMsg() {
    return Optional.<java.lang.String>ofNullable(msg);
  }

  /**
   * Sets the value of the 'msg' field.
   * @param value the value to set.
   */
  public TdxCancelOrder setMsg(java.lang.String value) {
    this.msg = value;
    return this;
  }

  /**
   * Creates a new TdxCancelOrder RecordBuilder.
   * @return A new TdxCancelOrder RecordBuilder
   */
  public static io.horizon.trader.transport.inbound.TdxCancelOrder.Builder newBuilder() {
    return new io.horizon.trader.transport.inbound.TdxCancelOrder.Builder();
  }

  /**
   * Creates a new TdxCancelOrder RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TdxCancelOrder RecordBuilder
   */
  public static io.horizon.trader.transport.inbound.TdxCancelOrder.Builder newBuilder(io.horizon.trader.transport.inbound.TdxCancelOrder.Builder other) {
    if (other == null) {
      return new io.horizon.trader.transport.inbound.TdxCancelOrder.Builder();
    } else {
      return new io.horizon.trader.transport.inbound.TdxCancelOrder.Builder(other);
    }
  }

  /**
   * Creates a new TdxCancelOrder RecordBuilder by copying an existing TdxCancelOrder instance.
   * @param other The existing instance to copy.
   * @return A new TdxCancelOrder RecordBuilder
   */
  public static io.horizon.trader.transport.inbound.TdxCancelOrder.Builder newBuilder(io.horizon.trader.transport.inbound.TdxCancelOrder other) {
    if (other == null) {
      return new io.horizon.trader.transport.inbound.TdxCancelOrder.Builder();
    } else {
      return new io.horizon.trader.transport.inbound.TdxCancelOrder.Builder(other);
    }
  }

  /**
   * RecordBuilder for TdxCancelOrder instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TdxCancelOrder>
    implements org.apache.avro.data.RecordBuilder<TdxCancelOrder> {

    private long generateTime;
    private long sendTime;
    private long ordSysId;
    private boolean immediately;
    private long delayMillis;
    private java.lang.String exchangeCode;
    private java.lang.String instrumentCode;
    private java.lang.String brokerId;
    private int accountId;
    private int subAccountId;
    private int strategyId;
    private java.lang.String operatorId;
    private java.lang.String msg;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.horizon.trader.transport.inbound.TdxCancelOrder.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.generateTime)) {
        this.generateTime = data().deepCopy(fields()[0].schema(), other.generateTime);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.sendTime)) {
        this.sendTime = data().deepCopy(fields()[1].schema(), other.sendTime);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.ordSysId)) {
        this.ordSysId = data().deepCopy(fields()[2].schema(), other.ordSysId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.immediately)) {
        this.immediately = data().deepCopy(fields()[3].schema(), other.immediately);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.delayMillis)) {
        this.delayMillis = data().deepCopy(fields()[4].schema(), other.delayMillis);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.exchangeCode)) {
        this.exchangeCode = data().deepCopy(fields()[5].schema(), other.exchangeCode);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.instrumentCode)) {
        this.instrumentCode = data().deepCopy(fields()[6].schema(), other.instrumentCode);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.brokerId)) {
        this.brokerId = data().deepCopy(fields()[7].schema(), other.brokerId);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.accountId)) {
        this.accountId = data().deepCopy(fields()[8].schema(), other.accountId);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.subAccountId)) {
        this.subAccountId = data().deepCopy(fields()[9].schema(), other.subAccountId);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.strategyId)) {
        this.strategyId = data().deepCopy(fields()[10].schema(), other.strategyId);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.operatorId)) {
        this.operatorId = data().deepCopy(fields()[11].schema(), other.operatorId);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.msg)) {
        this.msg = data().deepCopy(fields()[12].schema(), other.msg);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing TdxCancelOrder instance
     * @param other The existing instance to copy.
     */
    private Builder(io.horizon.trader.transport.inbound.TdxCancelOrder other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.generateTime)) {
        this.generateTime = data().deepCopy(fields()[0].schema(), other.generateTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sendTime)) {
        this.sendTime = data().deepCopy(fields()[1].schema(), other.sendTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ordSysId)) {
        this.ordSysId = data().deepCopy(fields()[2].schema(), other.ordSysId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.immediately)) {
        this.immediately = data().deepCopy(fields()[3].schema(), other.immediately);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.delayMillis)) {
        this.delayMillis = data().deepCopy(fields()[4].schema(), other.delayMillis);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.exchangeCode)) {
        this.exchangeCode = data().deepCopy(fields()[5].schema(), other.exchangeCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.instrumentCode)) {
        this.instrumentCode = data().deepCopy(fields()[6].schema(), other.instrumentCode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.brokerId)) {
        this.brokerId = data().deepCopy(fields()[7].schema(), other.brokerId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.accountId)) {
        this.accountId = data().deepCopy(fields()[8].schema(), other.accountId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.subAccountId)) {
        this.subAccountId = data().deepCopy(fields()[9].schema(), other.subAccountId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.strategyId)) {
        this.strategyId = data().deepCopy(fields()[10].schema(), other.strategyId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.operatorId)) {
        this.operatorId = data().deepCopy(fields()[11].schema(), other.operatorId);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.msg)) {
        this.msg = data().deepCopy(fields()[12].schema(), other.msg);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'generateTime' field.
      * @return The value.
      */
    public long getGenerateTime() {
      return generateTime;
    }

    /**
      * Gets the value of the 'generateTime' field as an Optional&lt;java.lang.Long&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.Long&gt;.
      */
    public Optional<java.lang.Long> getOptionalGenerateTime() {
      return Optional.<java.lang.Long>ofNullable(generateTime);
    }

    /**
      * Sets the value of the 'generateTime' field.
      * @param value The value of 'generateTime'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setGenerateTime(long value) {
      validate(fields()[0], value);
      this.generateTime = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'generateTime' field has been set.
      * @return True if the 'generateTime' field has been set, false otherwise.
      */
    public boolean hasGenerateTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'generateTime' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearGenerateTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sendTime' field.
      * @return The value.
      */
    public long getSendTime() {
      return sendTime;
    }

    /**
      * Gets the value of the 'sendTime' field as an Optional&lt;java.lang.Long&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.Long&gt;.
      */
    public Optional<java.lang.Long> getOptionalSendTime() {
      return Optional.<java.lang.Long>ofNullable(sendTime);
    }

    /**
      * Sets the value of the 'sendTime' field.
      * @param value The value of 'sendTime'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setSendTime(long value) {
      validate(fields()[1], value);
      this.sendTime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sendTime' field has been set.
      * @return True if the 'sendTime' field has been set, false otherwise.
      */
    public boolean hasSendTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sendTime' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearSendTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ordSysId' field.
      * @return The value.
      */
    public long getOrdSysId() {
      return ordSysId;
    }

    /**
      * Gets the value of the 'ordSysId' field as an Optional&lt;java.lang.Long&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.Long&gt;.
      */
    public Optional<java.lang.Long> getOptionalOrdSysId() {
      return Optional.<java.lang.Long>ofNullable(ordSysId);
    }

    /**
      * Sets the value of the 'ordSysId' field.
      * @param value The value of 'ordSysId'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setOrdSysId(long value) {
      validate(fields()[2], value);
      this.ordSysId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ordSysId' field has been set.
      * @return True if the 'ordSysId' field has been set, false otherwise.
      */
    public boolean hasOrdSysId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ordSysId' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearOrdSysId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'immediately' field.
      * @return The value.
      */
    public boolean getImmediately() {
      return immediately;
    }

    /**
      * Gets the value of the 'immediately' field as an Optional&lt;java.lang.Boolean&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.Boolean&gt;.
      */
    public Optional<java.lang.Boolean> getOptionalImmediately() {
      return Optional.<java.lang.Boolean>ofNullable(immediately);
    }

    /**
      * Sets the value of the 'immediately' field.
      * @param value The value of 'immediately'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setImmediately(boolean value) {
      validate(fields()[3], value);
      this.immediately = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'immediately' field has been set.
      * @return True if the 'immediately' field has been set, false otherwise.
      */
    public boolean hasImmediately() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'immediately' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearImmediately() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'delayMillis' field.
      * @return The value.
      */
    public long getDelayMillis() {
      return delayMillis;
    }

    /**
      * Gets the value of the 'delayMillis' field as an Optional&lt;java.lang.Long&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.Long&gt;.
      */
    public Optional<java.lang.Long> getOptionalDelayMillis() {
      return Optional.<java.lang.Long>ofNullable(delayMillis);
    }

    /**
      * Sets the value of the 'delayMillis' field.
      * @param value The value of 'delayMillis'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setDelayMillis(long value) {
      validate(fields()[4], value);
      this.delayMillis = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'delayMillis' field has been set.
      * @return True if the 'delayMillis' field has been set, false otherwise.
      */
    public boolean hasDelayMillis() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'delayMillis' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearDelayMillis() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'exchangeCode' field.
      * @return The value.
      */
    public java.lang.String getExchangeCode() {
      return exchangeCode;
    }

    /**
      * Gets the value of the 'exchangeCode' field as an Optional&lt;java.lang.String&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.String&gt;.
      */
    public Optional<java.lang.String> getOptionalExchangeCode() {
      return Optional.<java.lang.String>ofNullable(exchangeCode);
    }

    /**
      * Sets the value of the 'exchangeCode' field.
      * @param value The value of 'exchangeCode'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setExchangeCode(java.lang.String value) {
      validate(fields()[5], value);
      this.exchangeCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'exchangeCode' field has been set.
      * @return True if the 'exchangeCode' field has been set, false otherwise.
      */
    public boolean hasExchangeCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'exchangeCode' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearExchangeCode() {
      exchangeCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrumentCode' field.
      * @return The value.
      */
    public java.lang.String getInstrumentCode() {
      return instrumentCode;
    }

    /**
      * Gets the value of the 'instrumentCode' field as an Optional&lt;java.lang.String&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.String&gt;.
      */
    public Optional<java.lang.String> getOptionalInstrumentCode() {
      return Optional.<java.lang.String>ofNullable(instrumentCode);
    }

    /**
      * Sets the value of the 'instrumentCode' field.
      * @param value The value of 'instrumentCode'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setInstrumentCode(java.lang.String value) {
      validate(fields()[6], value);
      this.instrumentCode = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'instrumentCode' field has been set.
      * @return True if the 'instrumentCode' field has been set, false otherwise.
      */
    public boolean hasInstrumentCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'instrumentCode' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearInstrumentCode() {
      instrumentCode = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'brokerId' field.
      * @return The value.
      */
    public java.lang.String getBrokerId() {
      return brokerId;
    }

    /**
      * Gets the value of the 'brokerId' field as an Optional&lt;java.lang.String&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.String&gt;.
      */
    public Optional<java.lang.String> getOptionalBrokerId() {
      return Optional.<java.lang.String>ofNullable(brokerId);
    }

    /**
      * Sets the value of the 'brokerId' field.
      * @param value The value of 'brokerId'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setBrokerId(java.lang.String value) {
      validate(fields()[7], value);
      this.brokerId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'brokerId' field has been set.
      * @return True if the 'brokerId' field has been set, false otherwise.
      */
    public boolean hasBrokerId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'brokerId' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearBrokerId() {
      brokerId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountId' field.
      * @return The value.
      */
    public int getAccountId() {
      return accountId;
    }

    /**
      * Gets the value of the 'accountId' field as an Optional&lt;java.lang.Integer&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.Integer&gt;.
      */
    public Optional<java.lang.Integer> getOptionalAccountId() {
      return Optional.<java.lang.Integer>ofNullable(accountId);
    }

    /**
      * Sets the value of the 'accountId' field.
      * @param value The value of 'accountId'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setAccountId(int value) {
      validate(fields()[8], value);
      this.accountId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'accountId' field has been set.
      * @return True if the 'accountId' field has been set, false otherwise.
      */
    public boolean hasAccountId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'accountId' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearAccountId() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'subAccountId' field.
      * @return The value.
      */
    public int getSubAccountId() {
      return subAccountId;
    }

    /**
      * Gets the value of the 'subAccountId' field as an Optional&lt;java.lang.Integer&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.Integer&gt;.
      */
    public Optional<java.lang.Integer> getOptionalSubAccountId() {
      return Optional.<java.lang.Integer>ofNullable(subAccountId);
    }

    /**
      * Sets the value of the 'subAccountId' field.
      * @param value The value of 'subAccountId'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setSubAccountId(int value) {
      validate(fields()[9], value);
      this.subAccountId = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'subAccountId' field has been set.
      * @return True if the 'subAccountId' field has been set, false otherwise.
      */
    public boolean hasSubAccountId() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'subAccountId' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearSubAccountId() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'strategyId' field.
      * @return The value.
      */
    public int getStrategyId() {
      return strategyId;
    }

    /**
      * Gets the value of the 'strategyId' field as an Optional&lt;java.lang.Integer&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.Integer&gt;.
      */
    public Optional<java.lang.Integer> getOptionalStrategyId() {
      return Optional.<java.lang.Integer>ofNullable(strategyId);
    }

    /**
      * Sets the value of the 'strategyId' field.
      * @param value The value of 'strategyId'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setStrategyId(int value) {
      validate(fields()[10], value);
      this.strategyId = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'strategyId' field has been set.
      * @return True if the 'strategyId' field has been set, false otherwise.
      */
    public boolean hasStrategyId() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'strategyId' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearStrategyId() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'operatorId' field.
      * @return The value.
      */
    public java.lang.String getOperatorId() {
      return operatorId;
    }

    /**
      * Gets the value of the 'operatorId' field as an Optional&lt;java.lang.String&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.String&gt;.
      */
    public Optional<java.lang.String> getOptionalOperatorId() {
      return Optional.<java.lang.String>ofNullable(operatorId);
    }

    /**
      * Sets the value of the 'operatorId' field.
      * @param value The value of 'operatorId'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setOperatorId(java.lang.String value) {
      validate(fields()[11], value);
      this.operatorId = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'operatorId' field has been set.
      * @return True if the 'operatorId' field has been set, false otherwise.
      */
    public boolean hasOperatorId() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'operatorId' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearOperatorId() {
      operatorId = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'msg' field.
      * @return The value.
      */
    public java.lang.String getMsg() {
      return msg;
    }

    /**
      * Gets the value of the 'msg' field as an Optional&lt;java.lang.String&gt;.
      * @return The value wrapped in an Optional&lt;java.lang.String&gt;.
      */
    public Optional<java.lang.String> getOptionalMsg() {
      return Optional.<java.lang.String>ofNullable(msg);
    }

    /**
      * Sets the value of the 'msg' field.
      * @param value The value of 'msg'.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder setMsg(java.lang.String value) {
      validate(fields()[12], value);
      this.msg = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'msg' field has been set.
      * @return True if the 'msg' field has been set, false otherwise.
      */
    public boolean hasMsg() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'msg' field.
      * @return This builder.
      */
    public io.horizon.trader.transport.inbound.TdxCancelOrder.Builder clearMsg() {
      msg = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    public TdxCancelOrder build() {
      try {
        TdxCancelOrder record = new TdxCancelOrder();
        record.generateTime = fieldSetFlags()[0] ? this.generateTime : (java.lang.Long) defaultValue(fields()[0]);
        record.sendTime = fieldSetFlags()[1] ? this.sendTime : (java.lang.Long) defaultValue(fields()[1]);
        record.ordSysId = fieldSetFlags()[2] ? this.ordSysId : (java.lang.Long) defaultValue(fields()[2]);
        record.immediately = fieldSetFlags()[3] ? this.immediately : (java.lang.Boolean) defaultValue(fields()[3]);
        record.delayMillis = fieldSetFlags()[4] ? this.delayMillis : (java.lang.Long) defaultValue(fields()[4]);
        record.exchangeCode = fieldSetFlags()[5] ? this.exchangeCode : (java.lang.String) defaultValue(fields()[5]);
        record.instrumentCode = fieldSetFlags()[6] ? this.instrumentCode : (java.lang.String) defaultValue(fields()[6]);
        record.brokerId = fieldSetFlags()[7] ? this.brokerId : (java.lang.String) defaultValue(fields()[7]);
        record.accountId = fieldSetFlags()[8] ? this.accountId : (java.lang.Integer) defaultValue(fields()[8]);
        record.subAccountId = fieldSetFlags()[9] ? this.subAccountId : (java.lang.Integer) defaultValue(fields()[9]);
        record.strategyId = fieldSetFlags()[10] ? this.strategyId : (java.lang.Integer) defaultValue(fields()[10]);
        record.operatorId = fieldSetFlags()[11] ? this.operatorId : (java.lang.String) defaultValue(fields()[11]);
        record.msg = fieldSetFlags()[12] ? this.msg : (java.lang.String) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TdxCancelOrder>
    WRITER$ = (org.apache.avro.io.DatumWriter<TdxCancelOrder>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TdxCancelOrder>
    READER$ = (org.apache.avro.io.DatumReader<TdxCancelOrder>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.generateTime);

    out.writeLong(this.sendTime);

    out.writeLong(this.ordSysId);

    out.writeBoolean(this.immediately);

    out.writeLong(this.delayMillis);

    out.writeString(this.exchangeCode);

    out.writeString(this.instrumentCode);

    out.writeString(this.brokerId);

    out.writeInt(this.accountId);

    out.writeInt(this.subAccountId);

    out.writeInt(this.strategyId);

    out.writeString(this.operatorId);

    out.writeString(this.msg);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.generateTime = in.readLong();

      this.sendTime = in.readLong();

      this.ordSysId = in.readLong();

      this.immediately = in.readBoolean();

      this.delayMillis = in.readLong();

      this.exchangeCode = in.readString();

      this.instrumentCode = in.readString();

      this.brokerId = in.readString();

      this.accountId = in.readInt();

      this.subAccountId = in.readInt();

      this.strategyId = in.readInt();

      this.operatorId = in.readString();

      this.msg = in.readString();

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.generateTime = in.readLong();
          break;

        case 1:
          this.sendTime = in.readLong();
          break;

        case 2:
          this.ordSysId = in.readLong();
          break;

        case 3:
          this.immediately = in.readBoolean();
          break;

        case 4:
          this.delayMillis = in.readLong();
          break;

        case 5:
          this.exchangeCode = in.readString();
          break;

        case 6:
          this.instrumentCode = in.readString();
          break;

        case 7:
          this.brokerId = in.readString();
          break;

        case 8:
          this.accountId = in.readInt();
          break;

        case 9:
          this.subAccountId = in.readInt();
          break;

        case 10:
          this.strategyId = in.readInt();
          break;

        case 11:
          this.operatorId = in.readString();
          break;

        case 12:
          this.msg = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










